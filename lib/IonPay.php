<?php namespace Octobro\Nicepay\Lib;

use NicepayLib;

class IonPay
{
    private $data;

    private $host;

    private $invoice;

    private $nicepay;

    public function __construct($data, $host, $invoice)
    {
        $this->data = $data;
        $this->host = $host;
        $this->invoice = $invoice;
        $this->nicepay = new NicepayLib;
    }

    public function processPayment()
    {
        $this->setUpPayment();

        if ($this->payWithCreditCard()) {
            return $this->nicepay->chargeCard();
        }

        return $this->nicepay->requestVA();
    }

    private function payWithCreditCard()
    {
        if ($this->data['payMethod'] == '01') {
            return true;
        }

        return false;
    }

    private function payWithVirtualAccount()
    {
        return !$this->payWithCreditCard();
    }

    protected function setUpPayment()
    {
        $paymentMethod = $this->data['payMethod'];
        $vaExpiryDate   = date('Ymd', strtotime(date('Ymd') . ' +1 day')); // Set VA expiry date +1 day (optional)
        $total = (integer) $this->invoice->total;

        if ($this->payWithVirtualAccount()) {
            $this->nicepay->set('vacctVaildDt', $vaExpiryDate); // Set VA expiry date example: +1 day
            $this->nicepay->set('vacctVaildTm', date('His')); // Set VA Expiry Time
            $this->nicepay->set('bankCd', $this->data['bankCd']);
        }

        if ($this->payWithCreditCard()) {
            $this->nicepay->set('cartData', $this->invoice->getCartData());
        }

        // Populate Mandatory parameters to send
        $this->nicepay->set('payMethod', $paymentMethod);
        $this->nicepay->set('currency', 'IDR');
        $this->nicepay->set('amt', $total); // Total gross amount
        $this->nicepay->set('referenceNo', $this->invoice->order_code); // Invoice Number or Referenc Number Generated by merchant
        $this->nicepay->set('description', 'Payment of Invoice No '.$this->invoice->order_code); // Transaction description

        $this->nicepay->set('billingNm', 'John Doe'); // Customer name
        $this->nicepay->set('billingPhone', '02112345678'); // Customer phone number
        $this->nicepay->set('billingEmail', 'john@example.com'); //
        $this->nicepay->set('billingAddr', 'Jl. Jend. Sudirman No. 28');
        $this->nicepay->set('billingCity', 'Jakarta Pusat');
        $this->nicepay->set('billingState', 'DKI Jakarta');
        $this->nicepay->set('billingPostCd', '10210');
        $this->nicepay->set('billingCountry', 'Indonesia');

        $this->nicepay->set('deliveryNm', 'John Doe'); // Delivery name
        $this->nicepay->set('deliveryPhone', '02112345678');
        $this->nicepay->set('deliveryEmail', 'john@example.com');
        $this->nicepay->set('deliveryAddr', 'Jl. Jend. Sudirman No. 28');
        $this->nicepay->set('deliveryCity', 'Jakarta Pusat');
        $this->nicepay->set('deliveryState', 'DKI Jakarta');
        $this->nicepay->set('deliveryPostCd', '10210');
        $this->nicepay->set('deliveryCountry', 'Indonesia');
    }

}
